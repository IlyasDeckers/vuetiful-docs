(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{156:function(e,n,a){"use strict";a.r(n);var t=a(0),s=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"creating-plugins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-plugins","aria-hidden":"true"}},[e._v("#")]),e._v(" Creating plugins")]),a("p",[e._v("Plugins can be created on the fly and are installed automatically as "),a("code",[e._v("$pluginName")]),e._v(" for your convenience. These plugins are base templates that can be used to quickly create plugins for your application.")]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[e._v("npm run "),a("span",{attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),a("span",{attrs:{class:"token class-name"}},[e._v("plugin")]),e._v("\n")])])]),a("p",[e._v("If you would like to place the plugin in a subfolder of "),a("code",[e._v("/plugins")]),e._v(" then use this naming convention on generation: "),a("code",[e._v("folder_name/plugin_name")])])])}],!1,null,null,null);n.default=s.exports}}]);